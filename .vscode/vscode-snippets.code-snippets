{
	// Place your Greddit workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Jest Describe block": {
		"prefix": ["desc"],
		"body": ["describe(\"$1\", () => {", "\t$0", "});"],
		"description": "A Jest describe block."
	},

	"Jest before each": {
		"prefix": ["bef"],
		"body": ["beforeEach(() => {", "\t$0", "});"],
		"description": "A Jest before-each block."
	},

	"Jest before all": {
		"prefix": ["befA"],
		"body": ["beforeAll(() => {", "\t$0", "});"],
		"description": "A Jest before-each block."
	},

	"Jest after each": {
		"prefix": ["aft"],
		"body": ["afterEach(() => {", "\t$0", "});"],
		"description": "A Jest after-each block."
	},

	"Jest test": {
		"prefix": ["it"],
		"body": ["it(\"$1\", () => {", "\t$0", "});"],
		"description": "A Jest test."
	},

	"Typescript debug statement": {
		"prefix": ["clogv"],
		"body": ["console.log(\"=============> \", $0)"],
		"description": "A Typescript print statement for debugging."
	},

	"Typescript print statement": {
		"prefix": ["clog"],
		"body": ["console.log(\"=============> $0\")"],
		"description": "A Typescript print statement."
	}
}